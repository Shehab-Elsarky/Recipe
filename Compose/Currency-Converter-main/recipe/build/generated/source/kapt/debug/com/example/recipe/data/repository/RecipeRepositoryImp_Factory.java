// Generated by Dagger (https://dagger.dev).
package com.example.recipe.data.repository;

import com.example.recipe.data.source.RecipeRemoteDataSource;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RecipeRepositoryImp_Factory implements Factory<RecipeRepositoryImp> {
  private final Provider<RecipeRemoteDataSource> recipeRemoteDataSourceProvider;

  public RecipeRepositoryImp_Factory(
      Provider<RecipeRemoteDataSource> recipeRemoteDataSourceProvider) {
    this.recipeRemoteDataSourceProvider = recipeRemoteDataSourceProvider;
  }

  @Override
  public RecipeRepositoryImp get() {
    return newInstance(recipeRemoteDataSourceProvider.get());
  }

  public static RecipeRepositoryImp_Factory create(
      Provider<RecipeRemoteDataSource> recipeRemoteDataSourceProvider) {
    return new RecipeRepositoryImp_Factory(recipeRemoteDataSourceProvider);
  }

  public static RecipeRepositoryImp newInstance(RecipeRemoteDataSource recipeRemoteDataSource) {
    return new RecipeRepositoryImp(recipeRemoteDataSource);
  }
}
