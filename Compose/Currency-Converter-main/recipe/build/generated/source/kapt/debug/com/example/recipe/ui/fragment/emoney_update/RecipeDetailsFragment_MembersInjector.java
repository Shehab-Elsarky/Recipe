// Generated by Dagger (https://dagger.dev).
package com.example.recipe.ui.fragment.emoney_update;

import com.examples.core.ui.dialog.BaseNetworkingDialog;
import com.examples.core.ui.fragment.BaseUiHelper;
import com.examples.core.ui.fragment.NetworkBaseFragment_MembersInjector;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RecipeDetailsFragment_MembersInjector implements MembersInjector<RecipeDetailsFragment> {
  private final Provider<BaseNetworkingDialog> baseNetworkingDialogProvider;

  private final Provider<BaseUiHelper> fragmentHelperProvider;

  public RecipeDetailsFragment_MembersInjector(
      Provider<BaseNetworkingDialog> baseNetworkingDialogProvider,
      Provider<BaseUiHelper> fragmentHelperProvider) {
    this.baseNetworkingDialogProvider = baseNetworkingDialogProvider;
    this.fragmentHelperProvider = fragmentHelperProvider;
  }

  public static MembersInjector<RecipeDetailsFragment> create(
      Provider<BaseNetworkingDialog> baseNetworkingDialogProvider,
      Provider<BaseUiHelper> fragmentHelperProvider) {
    return new RecipeDetailsFragment_MembersInjector(baseNetworkingDialogProvider, fragmentHelperProvider);
  }

  @Override
  public void injectMembers(RecipeDetailsFragment instance) {
    NetworkBaseFragment_MembersInjector.injectBaseNetworkingDialog(instance, baseNetworkingDialogProvider.get());
    injectFragmentHelper(instance, fragmentHelperProvider.get());
  }

  @InjectedFieldSignature("com.example.recipe.ui.fragment.emoney_update.RecipeDetailsFragment.fragmentHelper")
  public static void injectFragmentHelper(RecipeDetailsFragment instance,
      BaseUiHelper fragmentHelper) {
    instance.fragmentHelper = fragmentHelper;
  }
}
