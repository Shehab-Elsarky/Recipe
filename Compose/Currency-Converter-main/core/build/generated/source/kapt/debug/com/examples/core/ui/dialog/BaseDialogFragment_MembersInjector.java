// Generated by Dagger (https://dagger.dev).
package com.examples.core.ui.dialog;

import com.examples.core.ui.view_model.BaseViewModel;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class BaseDialogFragment_MembersInjector<VM extends BaseViewModel> implements MembersInjector<BaseDialogFragment<VM>> {
  private final Provider<BaseNetworkingDialog> baseNetworkingDialogProvider;

  public BaseDialogFragment_MembersInjector(
      Provider<BaseNetworkingDialog> baseNetworkingDialogProvider) {
    this.baseNetworkingDialogProvider = baseNetworkingDialogProvider;
  }

  public static <VM extends BaseViewModel> MembersInjector<BaseDialogFragment<VM>> create(
      Provider<BaseNetworkingDialog> baseNetworkingDialogProvider) {
    return new BaseDialogFragment_MembersInjector<VM>(baseNetworkingDialogProvider);
  }

  @Override
  public void injectMembers(BaseDialogFragment<VM> instance) {
    injectBaseNetworkingDialog(instance, baseNetworkingDialogProvider.get());
  }

  @InjectedFieldSignature("com.examples.core.ui.dialog.BaseDialogFragment.baseNetworkingDialog")
  public static <VM extends BaseViewModel> void injectBaseNetworkingDialog(
      BaseDialogFragment<VM> instance, BaseNetworkingDialog baseNetworkingDialog) {
    instance.baseNetworkingDialog = baseNetworkingDialog;
  }
}
