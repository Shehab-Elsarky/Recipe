// Generated by Dagger (https://dagger.dev).
package com.examples.core.ui.fragment;

import com.examples.core.ui.dialog.BaseNetworkingDialog;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NetworkBaseFragment_MembersInjector implements MembersInjector<NetworkBaseFragment> {
  private final Provider<BaseNetworkingDialog> baseNetworkingDialogProvider;

  public NetworkBaseFragment_MembersInjector(
      Provider<BaseNetworkingDialog> baseNetworkingDialogProvider) {
    this.baseNetworkingDialogProvider = baseNetworkingDialogProvider;
  }

  public static MembersInjector<NetworkBaseFragment> create(
      Provider<BaseNetworkingDialog> baseNetworkingDialogProvider) {
    return new NetworkBaseFragment_MembersInjector(baseNetworkingDialogProvider);
  }

  @Override
  public void injectMembers(NetworkBaseFragment instance) {
    injectBaseNetworkingDialog(instance, baseNetworkingDialogProvider.get());
  }

  @InjectedFieldSignature("com.examples.core.ui.fragment.NetworkBaseFragment.baseNetworkingDialog")
  public static void injectBaseNetworkingDialog(NetworkBaseFragment instance,
      BaseNetworkingDialog baseNetworkingDialog) {
    instance.baseNetworkingDialog = baseNetworkingDialog;
  }
}
