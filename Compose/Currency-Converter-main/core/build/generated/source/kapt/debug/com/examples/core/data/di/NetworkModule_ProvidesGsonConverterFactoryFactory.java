// Generated by Dagger (https://dagger.dev).
package com.examples.core.data.di;

import com.google.gson.Gson;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import retrofit2.converter.gson.GsonConverterFactory;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NetworkModule_ProvidesGsonConverterFactoryFactory implements Factory<GsonConverterFactory> {
  private final Provider<Gson> gsonProvider;

  public NetworkModule_ProvidesGsonConverterFactoryFactory(Provider<Gson> gsonProvider) {
    this.gsonProvider = gsonProvider;
  }

  @Override
  public GsonConverterFactory get() {
    return providesGsonConverterFactory(gsonProvider.get());
  }

  public static NetworkModule_ProvidesGsonConverterFactoryFactory create(
      Provider<Gson> gsonProvider) {
    return new NetworkModule_ProvidesGsonConverterFactoryFactory(gsonProvider);
  }

  public static GsonConverterFactory providesGsonConverterFactory(Gson gson) {
    return Preconditions.checkNotNullFromProvides(NetworkModule.INSTANCE.providesGsonConverterFactory(gson));
  }
}
